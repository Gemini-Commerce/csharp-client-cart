/*
 * Cart Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cart.Client.OpenAPIDateConverter;

namespace cart.Model
{
    /// <summary>
    /// CartCartItem
    /// </summary>
    [DataContract(Name = "cartCartItem")]
    public partial class CartCartItem : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CartCartItem" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="productGrn">productGrn.</param>
        /// <param name="productConfiguration">productConfiguration.</param>
        /// <param name="quantity">quantity.</param>
        /// <param name="price">price.</param>
        /// <param name="listPrice">listPrice.</param>
        /// <param name="discount">discount.</param>
        /// <param name="basePrice">basePrice.</param>
        /// <param name="customPrice">customPrice.</param>
        /// <param name="vatAmount">vatAmount.</param>
        /// <param name="vatPercentage">vatPercentage.</param>
        /// <param name="vatInaccurate">vatInaccurate.</param>
        /// <param name="vatCalculated">vatCalculated.</param>
        /// <param name="localizedName">localizedName.</param>
        /// <param name="productCode">productCode.</param>
        /// <param name="productSku">productSku.</param>
        /// <param name="imageGrn">imageGrn.</param>
        /// <param name="variantOptions">variantOptions.</param>
        /// <param name="isVirtual">isVirtual.</param>
        /// <param name="promotionGrns">promotionGrns.</param>
        /// <param name="additionalInfo">additionalInfo.</param>
        /// <param name="productData">productData.</param>
        public CartCartItem(string id = default(string), string productGrn = default(string), List<CartProductConfigurationStep> productConfiguration = default(List<CartProductConfigurationStep>), long quantity = default(long), CartMoney price = default(CartMoney), CartMoney listPrice = default(CartMoney), CartMoney discount = default(CartMoney), CartMoney basePrice = default(CartMoney), CartItemCustomPrice customPrice = default(CartItemCustomPrice), CartMoney vatAmount = default(CartMoney), float vatPercentage = default(float), bool vatInaccurate = default(bool), bool vatCalculated = default(bool), Dictionary<string, string> localizedName = default(Dictionary<string, string>), string productCode = default(string), string productSku = default(string), string imageGrn = default(string), string variantOptions = default(string), bool isVirtual = default(bool), List<string> promotionGrns = default(List<string>), string additionalInfo = default(string), string productData = default(string))
        {
            this.Id = id;
            this.ProductGrn = productGrn;
            this.ProductConfiguration = productConfiguration;
            this.Quantity = quantity;
            this.Price = price;
            this.ListPrice = listPrice;
            this.Discount = discount;
            this.BasePrice = basePrice;
            this.CustomPrice = customPrice;
            this.VatAmount = vatAmount;
            this.VatPercentage = vatPercentage;
            this.VatInaccurate = vatInaccurate;
            this.VatCalculated = vatCalculated;
            this.LocalizedName = localizedName;
            this.ProductCode = productCode;
            this.ProductSku = productSku;
            this.ImageGrn = imageGrn;
            this.VariantOptions = variantOptions;
            this.IsVirtual = isVirtual;
            this.PromotionGrns = promotionGrns;
            this.AdditionalInfo = additionalInfo;
            this.ProductData = productData;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets ProductGrn
        /// </summary>
        [DataMember(Name = "productGrn", EmitDefaultValue = false)]
        public string ProductGrn { get; set; }

        /// <summary>
        /// Gets or Sets ProductConfiguration
        /// </summary>
        [DataMember(Name = "productConfiguration", EmitDefaultValue = false)]
        public List<CartProductConfigurationStep> ProductConfiguration { get; set; }

        /// <summary>
        /// Gets or Sets Quantity
        /// </summary>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public long Quantity { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", EmitDefaultValue = false)]
        public CartMoney Price { get; set; }

        /// <summary>
        /// Gets or Sets ListPrice
        /// </summary>
        [DataMember(Name = "listPrice", EmitDefaultValue = false)]
        public CartMoney ListPrice { get; set; }

        /// <summary>
        /// Gets or Sets Discount
        /// </summary>
        [DataMember(Name = "discount", EmitDefaultValue = false)]
        public CartMoney Discount { get; set; }

        /// <summary>
        /// Gets or Sets BasePrice
        /// </summary>
        [DataMember(Name = "basePrice", EmitDefaultValue = false)]
        public CartMoney BasePrice { get; set; }

        /// <summary>
        /// Gets or Sets CustomPrice
        /// </summary>
        [DataMember(Name = "customPrice", EmitDefaultValue = false)]
        public CartItemCustomPrice CustomPrice { get; set; }

        /// <summary>
        /// Gets or Sets VatAmount
        /// </summary>
        [DataMember(Name = "vatAmount", EmitDefaultValue = false)]
        public CartMoney VatAmount { get; set; }

        /// <summary>
        /// Gets or Sets VatPercentage
        /// </summary>
        [DataMember(Name = "vatPercentage", EmitDefaultValue = false)]
        public float VatPercentage { get; set; }

        /// <summary>
        /// Gets or Sets VatInaccurate
        /// </summary>
        [DataMember(Name = "vatInaccurate", EmitDefaultValue = true)]
        public bool VatInaccurate { get; set; }

        /// <summary>
        /// Gets or Sets VatCalculated
        /// </summary>
        [DataMember(Name = "vatCalculated", EmitDefaultValue = true)]
        public bool VatCalculated { get; set; }

        /// <summary>
        /// Gets or Sets LocalizedName
        /// </summary>
        [DataMember(Name = "localizedName", EmitDefaultValue = false)]
        public Dictionary<string, string> LocalizedName { get; set; }

        /// <summary>
        /// Gets or Sets ProductCode
        /// </summary>
        [DataMember(Name = "productCode", EmitDefaultValue = false)]
        public string ProductCode { get; set; }

        /// <summary>
        /// Gets or Sets ProductSku
        /// </summary>
        [DataMember(Name = "productSku", EmitDefaultValue = false)]
        public string ProductSku { get; set; }

        /// <summary>
        /// Gets or Sets ImageGrn
        /// </summary>
        [DataMember(Name = "imageGrn", EmitDefaultValue = false)]
        public string ImageGrn { get; set; }

        /// <summary>
        /// Gets or Sets VariantOptions
        /// </summary>
        [DataMember(Name = "variantOptions", EmitDefaultValue = false)]
        public string VariantOptions { get; set; }

        /// <summary>
        /// Gets or Sets IsVirtual
        /// </summary>
        [DataMember(Name = "isVirtual", EmitDefaultValue = true)]
        public bool IsVirtual { get; set; }

        /// <summary>
        /// Gets or Sets PromotionGrns
        /// </summary>
        [DataMember(Name = "promotionGrns", EmitDefaultValue = false)]
        public List<string> PromotionGrns { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalInfo
        /// </summary>
        [DataMember(Name = "additionalInfo", EmitDefaultValue = false)]
        public string AdditionalInfo { get; set; }

        /// <summary>
        /// Gets or Sets ProductData
        /// </summary>
        [DataMember(Name = "productData", EmitDefaultValue = false)]
        public string ProductData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CartCartItem {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  ProductGrn: ").Append(ProductGrn).Append("\n");
            sb.Append("  ProductConfiguration: ").Append(ProductConfiguration).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  ListPrice: ").Append(ListPrice).Append("\n");
            sb.Append("  Discount: ").Append(Discount).Append("\n");
            sb.Append("  BasePrice: ").Append(BasePrice).Append("\n");
            sb.Append("  CustomPrice: ").Append(CustomPrice).Append("\n");
            sb.Append("  VatAmount: ").Append(VatAmount).Append("\n");
            sb.Append("  VatPercentage: ").Append(VatPercentage).Append("\n");
            sb.Append("  VatInaccurate: ").Append(VatInaccurate).Append("\n");
            sb.Append("  VatCalculated: ").Append(VatCalculated).Append("\n");
            sb.Append("  LocalizedName: ").Append(LocalizedName).Append("\n");
            sb.Append("  ProductCode: ").Append(ProductCode).Append("\n");
            sb.Append("  ProductSku: ").Append(ProductSku).Append("\n");
            sb.Append("  ImageGrn: ").Append(ImageGrn).Append("\n");
            sb.Append("  VariantOptions: ").Append(VariantOptions).Append("\n");
            sb.Append("  IsVirtual: ").Append(IsVirtual).Append("\n");
            sb.Append("  PromotionGrns: ").Append(PromotionGrns).Append("\n");
            sb.Append("  AdditionalInfo: ").Append(AdditionalInfo).Append("\n");
            sb.Append("  ProductData: ").Append(ProductData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
