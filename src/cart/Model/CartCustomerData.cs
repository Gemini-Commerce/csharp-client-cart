/*
 * Cart Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = cart.Client.OpenAPIDateConverter;

namespace cart.Model
{
    /// <summary>
    /// CartCustomerData
    /// </summary>
    [DataContract(Name = "cartCustomerData")]
    public partial class CartCustomerData : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CartCustomerData" /> class.
        /// </summary>
        /// <param name="customerGrn">customerGrn.</param>
        /// <param name="firstname">firstname.</param>
        /// <param name="lastname">lastname.</param>
        /// <param name="email">email.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="groups">groups.</param>
        /// <param name="taxCode">taxCode.</param>
        /// <param name="certifiedEmail">certifiedEmail.</param>
        /// <param name="sdiCode">sdiCode.</param>
        /// <param name="fiscalCode">fiscalCode.</param>
        /// <param name="companyName">companyName.</param>
        /// <param name="agentGrn">agentGrn.</param>
        public CartCustomerData(string customerGrn = default(string), string firstname = default(string), string lastname = default(string), string email = default(string), string phoneNumber = default(string), List<string> groups = default(List<string>), string taxCode = default(string), string certifiedEmail = default(string), string sdiCode = default(string), string fiscalCode = default(string), string companyName = default(string), string agentGrn = default(string))
        {
            this.CustomerGrn = customerGrn;
            this.Firstname = firstname;
            this.Lastname = lastname;
            this.Email = email;
            this.PhoneNumber = phoneNumber;
            this.Groups = groups;
            this.TaxCode = taxCode;
            this.CertifiedEmail = certifiedEmail;
            this.SdiCode = sdiCode;
            this.FiscalCode = fiscalCode;
            this.CompanyName = companyName;
            this.AgentGrn = agentGrn;
            this.AdditionalProperties = new Dictionary<string, object>();
        }

        /// <summary>
        /// Gets or Sets CustomerGrn
        /// </summary>
        [DataMember(Name = "customerGrn", EmitDefaultValue = false)]
        public string CustomerGrn { get; set; }

        /// <summary>
        /// Gets or Sets Firstname
        /// </summary>
        [DataMember(Name = "firstname", EmitDefaultValue = false)]
        public string Firstname { get; set; }

        /// <summary>
        /// Gets or Sets Lastname
        /// </summary>
        [DataMember(Name = "lastname", EmitDefaultValue = false)]
        public string Lastname { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name = "phoneNumber", EmitDefaultValue = false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets Groups
        /// </summary>
        [DataMember(Name = "groups", EmitDefaultValue = false)]
        public List<string> Groups { get; set; }

        /// <summary>
        /// Gets or Sets TaxCode
        /// </summary>
        [DataMember(Name = "taxCode", EmitDefaultValue = false)]
        public string TaxCode { get; set; }

        /// <summary>
        /// Gets or Sets CertifiedEmail
        /// </summary>
        [DataMember(Name = "certifiedEmail", EmitDefaultValue = false)]
        public string CertifiedEmail { get; set; }

        /// <summary>
        /// Gets or Sets SdiCode
        /// </summary>
        [DataMember(Name = "sdiCode", EmitDefaultValue = false)]
        public string SdiCode { get; set; }

        /// <summary>
        /// Gets or Sets FiscalCode
        /// </summary>
        [DataMember(Name = "fiscalCode", EmitDefaultValue = false)]
        public string FiscalCode { get; set; }

        /// <summary>
        /// Gets or Sets CompanyName
        /// </summary>
        [DataMember(Name = "companyName", EmitDefaultValue = false)]
        public string CompanyName { get; set; }

        /// <summary>
        /// Gets or Sets AgentGrn
        /// </summary>
        [DataMember(Name = "agentGrn", EmitDefaultValue = false)]
        public string AgentGrn { get; set; }

        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CartCustomerData {\n");
            sb.Append("  CustomerGrn: ").Append(CustomerGrn).Append("\n");
            sb.Append("  Firstname: ").Append(Firstname).Append("\n");
            sb.Append("  Lastname: ").Append(Lastname).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("  TaxCode: ").Append(TaxCode).Append("\n");
            sb.Append("  CertifiedEmail: ").Append(CertifiedEmail).Append("\n");
            sb.Append("  SdiCode: ").Append(SdiCode).Append("\n");
            sb.Append("  FiscalCode: ").Append(FiscalCode).Append("\n");
            sb.Append("  CompanyName: ").Append(CompanyName).Append("\n");
            sb.Append("  AgentGrn: ").Append(AgentGrn).Append("\n");
            sb.Append("  AdditionalProperties: ").Append(AdditionalProperties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
