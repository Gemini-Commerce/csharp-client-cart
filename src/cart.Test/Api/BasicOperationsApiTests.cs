/*
 * Cart Service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@gemini-commerce.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using cart.Client;
using cart.Api;
// uncomment below to import models
//using cart.Model;

namespace cart.Test.Api
{
    /// <summary>
    ///  Class for testing BasicOperationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class BasicOperationsApiTests : IDisposable
    {
        private BasicOperationsApi instance;

        public BasicOperationsApiTests()
        {
            instance = new BasicOperationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BasicOperationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' BasicOperationsApi
            //Assert.IsType<BasicOperationsApi>(instance);
        }

        /// <summary>
        /// Test AddProducts
        /// </summary>
        [Fact]
        public void AddProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartAddProductsRequest body = null;
            //var response = instance.AddProducts(body);
            //Assert.IsType<CartAddProductsResponse>(response);
        }

        /// <summary>
        /// Test CreateCart
        /// </summary>
        [Fact]
        public void CreateCartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartCreateCartRequest body = null;
            //var response = instance.CreateCart(body);
            //Assert.IsType<CartCreateCartResponse>(response);
        }

        /// <summary>
        /// Test GetActiveCartByCustomer
        /// </summary>
        [Fact]
        public void GetActiveCartByCustomerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartGetActiveCartByCustomerRequest body = null;
            //var response = instance.GetActiveCartByCustomer(body);
            //Assert.IsType<CartGetActiveCartByCustomerResponse>(response);
        }

        /// <summary>
        /// Test GetCart
        /// </summary>
        [Fact]
        public void GetCartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartGetCartRequest body = null;
            //var response = instance.GetCart(body);
            //Assert.IsType<CartGetCartResponse>(response);
        }

        /// <summary>
        /// Test ListCarts
        /// </summary>
        [Fact]
        public void ListCartsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartListCartsRequest body = null;
            //var response = instance.ListCarts(body);
            //Assert.IsType<CartListCartsResponse>(response);
        }

        /// <summary>
        /// Test MergeCarts
        /// </summary>
        [Fact]
        public void MergeCartsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartMergeCartsRequest body = null;
            //var response = instance.MergeCarts(body);
            //Assert.IsType<CartMergeCartsResponse>(response);
        }

        /// <summary>
        /// Test RemoveProducts
        /// </summary>
        [Fact]
        public void RemoveProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartRemoveProductsRequest body = null;
            //var response = instance.RemoveProducts(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test SetAdditionalInfo
        /// </summary>
        [Fact]
        public void SetAdditionalInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartSetAdditionalInfoRequest body = null;
            //var response = instance.SetAdditionalInfo(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test SetNotes
        /// </summary>
        [Fact]
        public void SetNotesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartSetNotesRequest body = null;
            //var response = instance.SetNotes(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test TriggerRealignment
        /// </summary>
        [Fact]
        public void TriggerRealignmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartTriggerRealignmentRequest body = null;
            //var response = instance.TriggerRealignment(body);
            //Assert.IsType<CartTriggerRealignmentResponse>(response);
        }

        /// <summary>
        /// Test UpdateCart
        /// </summary>
        [Fact]
        public void UpdateCartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartUpdateCartRequest body = null;
            //var response = instance.UpdateCart(body);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test UpdateProducts
        /// </summary>
        [Fact]
        public void UpdateProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CartUpdateProductsRequest body = null;
            //var response = instance.UpdateProducts(body);
            //Assert.IsType<Object>(response);
        }
    }
}
